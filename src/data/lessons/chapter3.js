export const lessons = [
    {
        id: "3-1",
        chapter: "第3章 脱初心者のための必須知識",
        title: "カスタムフックの命名規則",
        content: "カスタムフックを作成する際の命名規則として、関数名を必ず「use」で始める理由とその重要性について学びます。"
    },
    {
        id: "3-2",
        chapter: "第3章 脱初心者のための必須知識",
        title: "SPAのルーティングをReact Routerで実装",
        content: "シングルページアプリケーション（SPA）におけるルーティングの基本概念と、React Routerを使用した実装方法を学びます。"
    },
    {
        id: "3-3",
        chapter: "第3章 脱初心者のための必須知識",
        title: "Routeコンポーネントでルートを定義",
        content: "React RouterのRouteコンポーネントを使用して、アプリケーション内のルートを定義する方法を理解します。"
    },
    {
        id: "3-4",
        chapter: "第3章 脱初心者のための必須知識",
        title: "Linkコンポーネントによるページ遷移",
        content: "React RouterのLinkコンポーネントを使用して、ユーザーが異なるルート間をナビゲートする方法を学びます。"
    },
    {
        id: "3-5",
        chapter: "第3章 脱初心者のための必須知識",
        title: "useParamsフックによるURL動的パラメータの取得",
        content: "useParamsフックを使用して、URL内の動的パラメータを取得し、コンポーネント内で活用する方法を理解します。"
    },
    {
        id: "3-6",
        chapter: "第3章 脱初心者のための必須知識",
        title: "プログラムによるナビゲーション制御",
        content: "useHistoryフックやuseNavigateフックを使用して、コード内からプログラム的にナビゲーションを制御する方法を学びます。"
    },
    {
        id: "3-7",
        chapter: "第3章 脱初心者のための必須知識",
        title: "現在のURL情報の取得",
        content: "useLocationフックを使用して、現在のURL情報を取得し、コンポーネント内で活用する方法を理解します。"
    },
    {
        id: "3-8",
        chapter: "第3章 脱初心者のための必須知識",
        title: "再利用可能なReactコンポーネント",
        content: "再利用性の高いReactコンポーネントを設計・実装するためのベストプラクティスとパターンを学びます。"
    },
    {
        id: "3-9",
        chapter: "第3章 脱初心者のための必須知識",
        title: "高階コンポーネントでのコンポーネント拡張",
        content: "高階コンポーネント（Higher-Order Components）を使用して、コンポーネントの機能を拡張・再利用する方法を理解します。"
    },
    {
        id: "3-10",
        chapter: "第3章 脱初心者のための必須知識",
        title: "レンダープロップスによるコンポーネントの柔軟な設計",
        content: "レンダープロップスパターンを使用して、コンポーネント間で動作や状態を柔軟に共有・カスタマイズする方法を学びます。"
    },
    {
        id: "3-11",
        chapter: "第3章 脱初心者のための必須知識",
        title: "コンポーネントの親子関係による構造化",
        content: "Reactコンポーネントの親子関係を適切に設計し、データフローと責任の分離を理解します。"
    },
    {
        id: "3-12",
        chapter: "第3章 脱初心者のための必須知識",
        title: "props drillingに注意する",
        content: "深いコンポーネント階層でのpropsの受け渡し（props drilling）の問題点と、その解決策を学びます。"
    },
    {
        id: "3-13",
        chapter: "第3章 脱初心者のための必須知識",
        title: "コンポーネントはシンプルに保つ",
        content: "コンポーネントの責任範囲を限定し、シンプルで理解しやすい設計を維持する重要性を理解します。"
    },
    {
        id: "3-14",
        chapter: "第3章 脱初心者のための必須知識",
        title: "ステートフルコンポーネントとステートレスコンポーネントの違い",
        content: "状態を持つコンポーネント（ステートフル）と状態を持たないコンポーネント（ステートレス）の違いと、それぞれの適切な使用場面を学びます。"
    },
    {
        id: "3-15",
        chapter: "第3章 脱初心者のための必須知識",
        title: "関数コンポーネントでのステートレスコンポーネント作成",
        content: "関数コンポーネントを使用して、ステートレスなコンポーネントを作成する方法とその利点を理解します。"
    },
    {
        id: "3-16",
        chapter: "第3章 脱初心者のための必須知識",
        title: "カスタムフックの命名規則",
        content: "カスタムフックを作成する際の命名規則と、その命名がコードの可読性やメンテナンス性に与える影響について学びます。"
    },
    {
        id: "3-17",
        chapter: "第3章 脱初心者のための必須知識",
        title: "SPAのルーティングをReact Routerで実装",
        content: "React Routerを使用して、シングルページアプリケーション（SPA）におけるルーティングの基本的な実装方法を学びます。"
    },
    {
        id: "3-18",
        chapter: "第3章 脱初心者のための必須知識",
        title: "Routeコンポーネントでルートを定義",
        content: "Routeコンポーネントを使用して、アプリケーション内の各ルートと対応するコンポーネントの定義方法を理解します。"
    },
    {
        id: "3-19",
        chapter: "第3章 脱初心者のための必須知識",
        title: "Linkコンポーネントによるページ遷移",
        content: "Linkコンポーネントを用いて、ユーザーがクリックすることでページ間を遷移するナビゲーションの実装方法を学びます。"
    },
    {
        id: "3-20",
        chapter: "第3章 脱初心者のための必須知識",
        title: "useParamsフックによるURL動的パラメータの取得",
        content: "useParamsフックを使用して、URL内の動的パラメータを取得し、コンポーネント内で活用する方法を理解します。"
    },
    {
        id: "3-21",
        chapter: "第3章 脱初心者のための必須知識",
        title: "プログラムによるナビゲーション制御",
        content: "useHistoryフックやuseNavigateフックを使用して、プログラム内からナビゲーションを制御する方法を学びます。"
    },
    {
        id: "3-22",
        chapter: "第3章 脱初心者のための必須知識",
        title: "現在のURL情報の取得",
        content: "useLocationフックを用いて、現在のURL情報を取得し、その情報を基にコンポーネントの動作を制御する方法を理解します。"
    },
    {
        id: "3-23",
        chapter: "第3章 脱初心者のための必須知識",
        title: "再利用可能なReactコンポーネント",
        content: "再利用性の高いReactコンポーネントを設計・実装するためのベストプラクティスとパターンを学びます。"
    },
    {
        id: "3-24",
        chapter: "第3章 脱初心者のための必須知識",
        title: "高階コンポーネントでのコンポーネント拡張",
        content: "高階コンポーネント（HOC）の概念と、それを使用して既存のコンポーネントに機能を追加・拡張する方法を理解します。"
    },
    {
        id: "3-25",
        chapter: "第3章 脱初心者のための必須知識",
        title: "レンダープロップスによるコンポーネントの柔軟な設計",
        content: "レンダープロップスパターンを使用して、コンポーネントの柔軟性と再利用性を高める設計方法を学びます。"
    }
];